{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Vanilla",
	"patterns": [
		{
			"name": "keyword.other.vanilla",
			"match": "\\b(break|case|const|default|else|fn|for|if|import|include|interface|let|loop|module|ref|return|struct|type|var|with|while)\\b"
		},{
			"name": "support.type.vanilla",
			"match": "\\b(bool|byte|int|float|word)\\b"
		},{
			"name": "support.function.vanilla",
			"match": "\\b(abs|as|assert|expect|exit|fits|len|lnot|land|lor|lxor|shl|shr|sha|SYSTEM|ADDR|GET|MOVE|PUT|SIZE|TYPE|REF)\\b"
		},{
			"name": "constant.language.vanilla",
			"match": "\\b(true|false|null|maxint|minint|lenint)\\b"
		},{
			"name": "variable.vanilla",
			"match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\b"
		},{
			"name": "constant.numeric.vanilla",
			"match": "\\b(0b[01]+)[XL]?\\b"
		},{
			"name": "constant.numeric.vanilla",
			"match": "\\b(0o[0-7]+)[XL]?\\b"
		},{
			"name": "constant.numeric.vanilla",
			"match": "\\b(0x[0-9A-F]+)[XL]?\\b"
		},{
			"name": "constant.numeric.float.vanilla",
			"match": "\\b([0-9]+[.][0-9]+([Ee][-+]?[0-9]+)?)\\b"
		},{
			"name": "constant.numeric.vanilla",
			"match": "\\b([0-9]+)[Xx]?\\b"
		},{
			"name": "comment.line.vanilla",
			"match": "\\/\\/.*"
		},{
			"include": "#strings"
		},{
			"include": "#characters"
		},{
			"include": "#comments"
		}
	],
	"repository": {
		"strings": {
			"name": "string.quoted.double.vanilla",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.vanilla",
					"match": "\\\\\""
				},
				{
					"name": "constant.character.escape.vanilla",
					"match": "\\\\[ntabfr0\\\\]"
				},
				{
					"name": "constant.character.escape.vanilla",
					"match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]"
				}
			]
		},
		"characters": {
			"name": "string.quoted.single.vanilla",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.vanilla",
					"match": "\\\\['ntabfr0\\\\]"
				},
				{
					"name": "constant.character.escape.vanilla",
					"match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]"
				}
			]
		},
		"comments": {
			"name": "comment.block.vanilla",
			"contentName": "comment.block.vanilla",
			"begin": "\\/\\*",
			"end": "\\*\\/",
			"patterns": [{
				"include": "#comments",
				"name": "comment.block.vanilla"
			}]
		}
	},
	"scopeName": "source.vanilla"
}
